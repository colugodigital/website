{"ast":null,"code":"var _jsxFileName = \"/Users/ianworrall/Desktop/FraktalNetwork/site/src/pages/Saas Onepage/NavbarPage.js\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport ScrollspyNav from \"./scrollSpy\";\n\nclass NavbarPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navItems: [{\n        id: 1,\n        idnm: \"home\",\n        navheading: \"Home\"\n      }, {\n        id: 3,\n        idnm: \"service\",\n        navheading: \"Services\"\n      }, {\n        id: 3,\n        idnm: \"testimonial\",\n        navheading: \"About\"\n      }, {\n        id: 4,\n        idnm: \"pricing\",\n        navheading: \"Pricing\"\n      }, {\n        id: 6,\n        idnm: \"contact\",\n        navheading: \"Contact\"\n      }],\n      isOpen: false\n    };\n    this.toggleLine = this.toggleLine.bind(this);\n  }\n\n  toggleLine() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  render() {\n    //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\n    let targetId = this.state.navItems.map(item => {\n      return item.idnm;\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      id: \"topnav\",\n      className: \"defaultscroll sticky\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"logo\",\n      to: \"/index\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, \"Landrick\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 76\n      }\n    }, \".\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buy-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"https://1.envato.market/4n73n\",\n      target: \"_blank\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, \"Buy Now\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-extras\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      onClick: this.toggleLine,\n      className: this.state.isOpen ? \"navbar-toggle open\" : \"navbar-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 53\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 53\n      }\n    }))))), /*#__PURE__*/React.createElement(ScrollspyNav, {\n      scrollTargetIds: targetId,\n      scrollDuration: \"800\",\n      headerBackground: \"false\",\n      activeNavClass: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navigation\",\n      style: {\n        display: this.state.isOpen ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navigation-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }\n    }, this.state.navItems.map((item, key) => /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      className: \"has-submenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\" + item.idnm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 53\n      }\n    }, \" \", item.navheading)))))))));\n  }\n\n}\n\nexport default NavbarPage;","map":{"version":3,"sources":["/Users/ianworrall/Desktop/FraktalNetwork/site/src/pages/Saas Onepage/NavbarPage.js"],"names":["React","Component","Link","Container","ScrollspyNav","NavbarPage","constructor","props","state","navItems","id","idnm","navheading","isOpen","toggleLine","bind","setState","prevState","render","targetId","map","item","display","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"reactstrap\";\r\nimport ScrollspyNav from \"./scrollSpy\";\r\n\r\nclass NavbarPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            navItems : [\r\n                { id: 1 , idnm : \"home\", navheading: \"Home\" },\r\n                { id: 3 , idnm : \"service\", navheading: \"Services\" },\r\n                { id: 3 , idnm : \"testimonial\", navheading: \"About\" },\r\n                { id: 4 , idnm : \"pricing\", navheading: \"Pricing\" },\r\n                { id: 6 , idnm : \"contact\", navheading: \"Contact\" },\r\n                ],\r\n                isOpen : false, \r\n        };\r\n        this.toggleLine = this.toggleLine.bind(this);\r\n    }\r\n\r\n    toggleLine() {\r\n        this.setState(prevState => ({  isOpen: !prevState.isOpen }));\r\n    }\r\n    \r\n    render() {\r\n        //Store all Navigationbar Id into TargetID variable(Used for Scrollspy)\r\n        let targetId = this.state.navItems.map((item) => {\r\n            return(\r\n                item.idnm\r\n            )\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                    <header id=\"topnav\" className=\"defaultscroll sticky\">\r\n                            <Container>\r\n                            <div>\r\n                                <Link className=\"logo\" to=\"/index\">Landrick<span className=\"text-primary\">.</span></Link>\r\n                            </div>                 \r\n                            <div className=\"buy-button\">\r\n                                <Link to=\"https://1.envato.market/4n73n\" target=\"_blank\" className=\"btn btn-primary\">Buy Now</Link>\r\n                            </div>\r\n                            <div className=\"menu-extras\">\r\n                                        <div className=\"menu-item\">\r\n                                            <Link to=\"#\" onClick={ this.toggleLine } className={this.state.isOpen ? \"navbar-toggle open\" : \"navbar-toggle\" } >\r\n                                                <div className=\"lines\">\r\n                                                    <span></span>\r\n                                                    <span></span>\r\n                                                    <span></span>\r\n                                                </div>\r\n                                            </Link>\r\n                                        </div>\r\n                            </div>\r\n                                    <ScrollspyNav\r\n                                        scrollTargetIds={targetId}\r\n                                        scrollDuration=\"800\"\r\n                                        headerBackground=\"false\"\r\n                                        activeNavClass=\"active\"\r\n                                    >\r\n                                    <div id=\"navigation\" style={{ display : this.state.isOpen ? \"block\" : \"none\" }}>\r\n                                        <ul className=\"navigation-menu\">\r\n                                            {this.state.navItems.map((item, key) => (\r\n                                                <li key={key} className=\"has-submenu\">\r\n                                                    <a href={\"#\" + item.idnm} > {item.navheading}</a>\r\n                                                </li>\r\n                                            ))} \r\n                                        </ul>\r\n                                    </div>\r\n                                    </ScrollspyNav>\r\n                            </Container>\r\n                        </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;"]},"metadata":{},"sourceType":"module"}