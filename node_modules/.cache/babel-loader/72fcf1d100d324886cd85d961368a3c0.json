{"ast":null,"code":"var _jsxFileName = \"/Users/ianworrall/Desktop/FraktalNetwork/site/src/components/Layout/Topbar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport { Container } from \"reactstrap\";\n\nclass Topbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.activateParentDropdown = item => {\n      const parent = item.parentElement;\n\n      if (parent) {\n        parent.classList.add('active'); // li\n\n        const parent1 = parent.parentElement;\n        parent1.classList.add('active'); // li\n\n        if (parent1) {\n          const parent2 = parent1.parentElement;\n          parent2.classList.add('active'); // li\n\n          if (parent2) {\n            const parent3 = parent2.parentElement;\n            parent3.classList.add('active'); // li\n\n            if (parent3) {\n              const parent4 = parent3.parentElement;\n              parent4.classList.add('active'); // li\n            }\n          }\n        }\n      }\n    };\n\n    this.openBlock = level2_id => {\n      //match level 2 id with current clicked id and if id is correct then update status and open level 2 submenu\n      this.setState({\n        navLinks: this.state.navLinks.map(navLink => navLink.id === level2_id ? { ...navLink,\n          isOpenSubMenu: !navLink.isOpenSubMenu\n        } : navLink)\n      });\n    };\n\n    this.openNestedBlock = (level2_id, level3_id) => {\n      var tmpLinks = this.state.navLinks;\n      tmpLinks.map(tmpLink => //Match level 2 id\n      tmpLink.id === level2_id ? tmpLink.child.map(tmpchild => //if level1 id is matched then match level 3 id\n      tmpchild.id === level3_id ? //if id is matched then update status(level 3 sub menu will be open)\n      tmpchild.isOpenNestedSubMenu = !tmpchild.isOpenNestedSubMenu : tmpchild.isOpenNestedSubMenu = false) : false);\n      this.setState({\n        navLinks: tmpLinks\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      navLinks: [{\n        id: 1,\n        title: \"Community\",\n        link: \"/#\",\n        isOpenSubMenu: false,\n        child: [{\n          id: 1,\n          title: \"Fraktal HQ\",\n          link: \"https://hq.fraktal.network\"\n        }, {\n          id: 2,\n          title: \"Products\",\n          link: \"/products\"\n        }, {\n          id: 3,\n          title: \"Partners\",\n          link: \"/partners\"\n        }, {\n          id: 4,\n          title: \"Blog\",\n          link: \"/#\"\n        }]\n      }, {\n        id: 2,\n        title: \"Participate\",\n        link: \"/#\",\n        isOpenSubMenu: false,\n        child: [{\n          id: 1,\n          title: \"How to Get Involved\",\n          link: \"/how-to-get-involved\"\n        }, {\n          id: 2,\n          title: \"Earn Tokens || Open Tasks\",\n          link: \"/#\"\n        }, {\n          id: 3,\n          title: \"Stake Tokens\",\n          link: \"/#\"\n        }]\n      }, {\n        id: 3,\n        title: \"Developers\",\n        link: \"/index\"\n      }]\n    };\n    this.toggleLine = this.toggleLine.bind(this);\n    this.openBlock.bind(this);\n    this.openNestedBlock.bind(this);\n  }\n\n  toggleLine() {\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  }\n\n  componentDidMount() {\n    var matchingMenuItem = null;\n    var ul = document.getElementById(\"top-menu\");\n    var items = ul.getElementsByTagName(\"a\");\n\n    for (var i = 0; i < items.length; ++i) {\n      if (this.props.location.pathname === items[i].pathname) {\n        matchingMenuItem = items[i];\n        break;\n      }\n    }\n\n    if (matchingMenuItem) {\n      this.activateParentDropdown(matchingMenuItem);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      id: \"topnav\",\n      className: \"defaultscroll sticky\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"logo\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, \"Fraktal\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buy-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://community.fraktal.network\",\n      id: \"buyButton\",\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }, \"Join Fraktal\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-extras\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      onClick: this.toggleLine,\n      className: this.state.isOpen ? \"navbar-toggle open\" : \"navbar-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"lines\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"navigation\",\n      style: {\n        display: this.state.isOpen ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"navigation-menu\",\n      id: \"top-menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, this.state.navLinks.map((navLink, key) => navLink.child || navLink.child2 ? /*#__PURE__*/React.createElement(\"li\", {\n      className: \"has-submenu\",\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: navLink.link,\n      onClick: event => {\n        event.preventDefault();\n        this.openBlock(navLink.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 45\n      }\n    }, navLink.title), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"menu-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 45\n      }\n    }), navLink.isMegaMenu ?\n    /*#__PURE__*/\n    // if menu is mega menu(2 columns grid)\n    React.createElement(\"ul\", {\n      className: navLink.isOpenSubMenu ? \"submenu megamenu open\" : \"submenu megamenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 61\n      }\n    }, navLink.child.map((item, childKey) => /*#__PURE__*/React.createElement(\"li\", {\n      key: childKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 77\n      }\n    }, item.title, item.isNew ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-danger rounded ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 124\n      }\n    }, \"v2.0\") : null))))), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 61\n      }\n    }, navLink.child2.map((item, childKey) => /*#__PURE__*/React.createElement(\"li\", {\n      key: childKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: item.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 77\n      }\n    }, item.title, item.isOnePage ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-warning rounded ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 128\n      }\n    }, \"Onepage\") : null)))))) :\n    /*#__PURE__*/\n    // if menu is not mega menu(1grid)\n    React.createElement(\"ul\", {\n      className: navLink.isOpenSubMenu ? \"submenu open\" : \"submenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 53\n      }\n    }, navLink.child.map((childArray, childKey) => childArray.nestedChild ?\n    /*#__PURE__*/\n    // sub menu item - Level 2\n    React.createElement(\"li\", {\n      className: \"has-submenu\",\n      key: childKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: childArray.link,\n      onClick: event => {\n        event.preventDefault();\n        this.openNestedBlock(navLink.id, childArray.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 77\n      }\n    }, \" \", childArray.title, \" \", childArray.isAdded ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 249\n      }\n    }, \"Added\") : null), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"submenu-arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 77\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: childArray.isOpenNestedSubMenu ? \"submenu open\" : \"submenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 77\n      }\n    }, childArray.nestedChild.map((nestedChildArray, nestedKey) =>\n    /*#__PURE__*/\n    // nested sub menu item - Level 3\n    React.createElement(\"li\", {\n      key: nestedKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 89\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: nestedChildArray.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 109\n      }\n    }, nestedChildArray.title, \" \", nestedChildArray.isAdded ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-primary rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 199\n      }\n    }, \"Added\") : null))))) : /*#__PURE__*/React.createElement(\"li\", {\n      key: childKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: childArray.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 92\n      }\n    }, childArray.title))))) : /*#__PURE__*/React.createElement(\"li\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: navLink.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 55\n      }\n    }, navLink.title)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buy-menu-btn d-none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      target: \"_blank\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 33\n      }\n    }, \"Buy Now\"))))));\n  }\n\n}\n\nexport default withRouter(Topbar);","map":{"version":3,"sources":["/Users/ianworrall/Desktop/FraktalNetwork/site/src/components/Layout/Topbar.js"],"names":["React","Component","Link","withRouter","Container","Topbar","constructor","props","activateParentDropdown","item","parent","parentElement","classList","add","parent1","parent2","parent3","parent4","openBlock","level2_id","setState","navLinks","state","map","navLink","id","isOpenSubMenu","openNestedBlock","level3_id","tmpLinks","tmpLink","child","tmpchild","isOpenNestedSubMenu","isOpen","title","link","toggleLine","bind","prevState","componentDidMount","matchingMenuItem","ul","document","getElementById","items","getElementsByTagName","i","length","location","pathname","render","display","key","child2","event","preventDefault","isMegaMenu","childKey","isNew","isOnePage","childArray","nestedChild","isAdded","nestedChildArray","nestedKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from \"react-router\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nclass Topbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen : false,\r\n            navLinks : [\r\n\r\n              { id : 1, title : \"Community\", link : \"/#\", isOpenSubMenu : false,\r\n                  child : [\r\n                      { id : 1, title : \"Fraktal HQ\", link : \"https://hq.fraktal.network\"},\r\n                      { id : 2, title : \"Products\", link : \"/products\"},\r\n                      { id : 3, title : \"Partners\", link : \"/partners\"},\r\n                      { id : 4, title : \"Blog\", link : \"/#\"},\r\n\r\n\r\n                  ]\r\n              },\r\n\r\n              { id : 2, title : \"Participate\", link : \"/#\", isOpenSubMenu : false,\r\n                  child : [\r\n                      { id : 1, title : \"How to Get Involved\", link : \"/how-to-get-involved\"},\r\n                      { id : 2, title : \"Earn Tokens || Open Tasks\", link : \"/#\"},\r\n                      { id : 3, title : \"Stake Tokens\", link : \"/#\"},\r\n\r\n\r\n                  ]\r\n              },\r\n\r\n\r\n\r\n\r\n\r\n\r\n                { id : 3, title : \"Developers\", link : \"/index\" },\r\n            ]\r\n         };\r\n        this.toggleLine = this.toggleLine.bind(this);\r\n        this.openBlock.bind(this);\r\n        this.openNestedBlock.bind(this);\r\n    }\r\n\r\n    toggleLine() {\r\n        this.setState(prevState => ({  isOpen: !prevState.isOpen }));\r\n    }\r\n\r\n    componentDidMount() {\r\n         var matchingMenuItem = null;\r\n         var ul = document.getElementById(\"top-menu\");\r\n         var items = ul.getElementsByTagName(\"a\");\r\n         for (var i = 0; i < items.length; ++i) {\r\n             if (this.props.location.pathname === items[i].pathname) {\r\n                 matchingMenuItem = items[i];\r\n                 break;\r\n             }\r\n         }\r\n         if (matchingMenuItem) {\r\n            this.activateParentDropdown(matchingMenuItem);\r\n         }\r\n     }\r\n\r\n    activateParentDropdown = (item) => {\r\n          const parent = item.parentElement;\r\n          if (parent) {\r\n              parent.classList.add('active'); // li\r\n              const parent1 = parent.parentElement;\r\n              parent1.classList.add('active'); // li\r\n              if (parent1) {\r\n                  const parent2 = parent1.parentElement;\r\n                  parent2.classList.add('active'); // li\r\n                  if (parent2) {\r\n                    const parent3 = parent2.parentElement;\r\n                    parent3.classList.add('active'); // li\r\n                    if (parent3) {\r\n                        const parent4 = parent3.parentElement;\r\n                        parent4.classList.add('active'); // li\r\n                 }\r\n             }\r\n         }\r\n    }\r\n    }\r\n\r\n    openBlock = (level2_id) => {\r\n        //match level 2 id with current clicked id and if id is correct then update status and open level 2 submenu\r\n        this.setState({\r\n            navLinks: this.state.navLinks.map(navLink => (navLink.id === level2_id ? {...navLink, isOpenSubMenu : !navLink.isOpenSubMenu  } : navLink))\r\n          });\r\n    }\r\n\r\n    openNestedBlock = (level2_id, level3_id) => {\r\n        var tmpLinks = this.state.navLinks;\r\n        tmpLinks.map((tmpLink) =>\r\n        //Match level 2 id\r\n           tmpLink.id === level2_id ?\r\n                tmpLink.child.map((tmpchild) =>\r\n                    //if level1 id is matched then match level 3 id\r\n                    tmpchild.id === level3_id ?\r\n                        //if id is matched then update status(level 3 sub menu will be open)\r\n                        tmpchild.isOpenNestedSubMenu = !tmpchild.isOpenNestedSubMenu\r\n                    :\r\n                        tmpchild.isOpenNestedSubMenu = false\r\n                )\r\n            :\r\n                false\r\n\r\n        )\r\n        this.setState({navLinks : tmpLinks});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <header id=\"topnav\" className=\"defaultscroll sticky\">\r\n                    <Container>\r\n                        <div>\r\n                            <Link className=\"logo\" to=\"/\">Fraktal</Link>\r\n                        </div>\r\n\r\n                        <div className=\"buy-button\">\r\n                          <a href=\"https://community.fraktal.network\" id=\"buyButton\" className=\"btn btn-outline-primary\">Join Fraktal</a>\r\n                      </div>\r\n\r\n                        <div className=\"menu-extras\">\r\n                            <div className=\"menu-item\">\r\n                                <Link to=\"#\" onClick={ this.toggleLine } className={this.state.isOpen ? \"navbar-toggle open\" : \"navbar-toggle\" } >\r\n                                    <div className=\"lines\">\r\n                                        <span></span>\r\n                                        <span></span>\r\n                                        <span></span>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div id=\"navigation\" style={{ display : this.state.isOpen ? \"block\" : \"none\" }}>\r\n                            <ul className=\"navigation-menu\" id=\"top-menu\">\r\n                                {\r\n                                    this.state.navLinks.map((navLink, key) =>\r\n                                    navLink.child || navLink.child2 ?\r\n                                        <li className=\"has-submenu\" key={key}>\r\n                                            {/* child item(menu Item) - Level 1 */}\r\n                                            <Link to={navLink.link} onClick={(event) => {  event.preventDefault(); this.openBlock(navLink.id) } } >{navLink.title}</Link>\r\n                                            <span className=\"menu-arrow\"></span>\r\n                                                {\r\n                                                    navLink.isMegaMenu ?\r\n                                                    // if menu is mega menu(2 columns grid)\r\n                                                    <ul className={ navLink.isOpenSubMenu ? \"submenu megamenu open\" : \"submenu megamenu\" }  >\r\n                                                        <li>\r\n                                                            <ul>\r\n                                                                {\r\n                                                                    navLink.child.map((item, childKey) =>\r\n                                                                        <li key={childKey}>\r\n                                                                            <Link to={item.link}>{item.title}{item.isNew ? <span className=\"badge badge-danger rounded ml-2\">v2.0</span> : null}</Link>\r\n                                                                        </li>\r\n                                                                    )\r\n                                                                }\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                        <li>\r\n                                                            <ul>\r\n                                                                {\r\n                                                                    navLink.child2.map((item, childKey) =>\r\n                                                                        <li key={childKey}>\r\n                                                                            <Link to={item.link}>{item.title}{item.isOnePage ? <span className=\"badge badge-warning rounded ml-2\">Onepage</span> : null}</Link>\r\n                                                                        </li>\r\n                                                                    )\r\n                                                                }\r\n                                                            </ul>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                :\r\n                                                    // if menu is not mega menu(1grid)\r\n                                                    <ul  className={ navLink.isOpenSubMenu ? \"submenu open\" : \"submenu\" }  >\r\n                                                            {\r\n                                                                navLink.child.map((childArray, childKey) =>\r\n                                                                    childArray.nestedChild ?\r\n                                                                    // sub menu item - Level 2\r\n                                                                        <li className=\"has-submenu\" key={childKey}>\r\n                                                                            <Link to={childArray.link} onClick={(event) => {  event.preventDefault(); this.openNestedBlock(navLink.id, childArray.id) } }> {childArray.title}{\" \"}{childArray.isAdded ? <span className=\"badge badge-primary rounded\">Added</span> : null }</Link>\r\n                                                                            <span className=\"submenu-arrow\"></span>\r\n                                                                            <ul className={ childArray.isOpenNestedSubMenu ? \"submenu open\" : \"submenu\" }>\r\n                                                                                {\r\n                                                                                    childArray.nestedChild.map((nestedChildArray, nestedKey) =>\r\n                                                                                        // nested sub menu item - Level 3\r\n                                                                                        <li key={nestedKey}><Link to={nestedChildArray.link}>{nestedChildArray.title}{\" \"}{nestedChildArray.isAdded ? <span className=\"badge badge-primary rounded\">Added</span> : null }</Link></li>\r\n                                                                                    )\r\n                                                                                }\r\n                                                                            </ul>\r\n                                                                        </li>\r\n                                                                    :\r\n                                                                        <li key={childKey}><Link to={childArray.link}>{childArray.title}</Link></li>\r\n                                                                )\r\n                                                            }\r\n                                                    </ul>\r\n                                                }\r\n\r\n                                        </li>\r\n                                    :\r\n                                        <li key={key}><Link to={navLink.link}>{navLink.title}</Link></li>\r\n                                    )\r\n                                }\r\n                            </ul>\r\n                            <div className=\"buy-menu-btn d-none\">\r\n                                <Link to=\"#\" target=\"_blank\" className=\"btn btn-primary\">Buy Now</Link>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n                </header>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Topbar);\r\n"]},"metadata":{},"sourceType":"module"}